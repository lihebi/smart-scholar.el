#+TITLE: smart-scholar.el
Smart Scholar for Emacs

* Introduction
** Installation
I haven't have chance to look into Melpa, so currently you are going
to install from GitHub. You can do this easily with
[[https://github.com/raxod502/straight.el][striaght.el]]. Basically,
you will need to do:

#+BEGIN_SRC elisp
(use-package smart-scholar
  :straight (smart-scholar :type git :host github
                           :repo "lihebi/smart-scholar.el"))
#+END_SRC

** Related work
- https://github.com/cute-jumper/gscholar-bibtex: Retrieve BibTeX
  entries from Google Scholar, ACM Digital Library, IEEE Xplore and
  DBLP. Might be useful for this project.
- https://www.zotero.org/: something like Mendeley. Open-source, in
  JS. Managed by some organization.
- Mendeley
- https://github.com/forrestbao/autoscholar: personal summarization


* Feature

** Usage

#+BEGIN_SRC elisp
(use-package smart-scholar
  :straight (smart-scholar :type git :host github
                           :repo "lihebi/smart-scholar.el")
  :config
  (setq smart-scholar-html-dir "~/github/smart-scholar-dist/html")
  (setq smart-scholar-pdf-dir "~/github/smart-scholar-pdfs")
  (setq smart-scholar-bib-dir "~/github/smart-scholar-dist/bib")
  (setq smart-scholar-manual-bib-dir "~/github/research/bib/"))
#+END_SRC

Then, use =M-x smart-scholar= to fire up the UI.

** Implementation
*** download html
*** generate bib from html
*** load/unload bib
*** download pdf

** support major CS conferences

It cost time to download html and generate bib files. You can also
download the final bib files
https://github.com/lihebi/smart-scholar-dist

AI conferences
- [X] NIPS
- [X] ICML
- [ ] ICLR

Neural Science

Robotics
- [ ] ICRA: International Conference on Robotics and Automation (ICRA)
- [ ] IRO: IEEE Transactions on Robotics
- [ ] ICAPS: International Conference on Automated Planning and Scheduling
- [ ] IROS: IEEE/RSJ International Conference on Intelligent Robots and Systems

Image Processing
- [ ] CVPR
- [ ] ICCV
- [ ] ECCV

NLP:
- [ ] ACL
- [ ] NAACL
- [ ] EMNLP

Programming Language:
- [X] PLDI
- [X] POPL

System:
- [X] SOSP
- [X] OSDI

For each of them, the package will manage
- crawl the website for a bib file list, for each year
- for each bib entry, figure out what is the pdf link
- download pdfs automatically, in background
- do all these at once

Also, I noticed that downloading htmls and pdfs from publishers
website is likely to be very slow, due to the visit limit of the
publishers. Thus, I might want to store a git mirror of all webpages
of these conferences. There might be copyright issues, but I think for
webpages that is fine.

The pdf cannot be mirrored: they are too large and has copyright
concern.

